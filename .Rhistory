knitr::opts_chunk$set(echo = TRUE)
x <- 1
x <- 1
name <- 1
students <- data.frame(
Name = c('Alice', 'Bob', 'Charlie', 'David', 'Eva')
)
View(students)
View(students)
students <- data.frame(
Name = c('Alice', 'Bob', 'Charlie', 'David', 'Eva'),
)
students <- data.frame(
Name = c('Alice', 'Bob', 'Charlie', 'David', 'Eva')
)
students <- data.frame(
Name = c('Alice', 'Bob', 'Charlie', 'David', 'Eva')
)
View(students)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva")
)
View(students)
View(students)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
Age = c(18, 21, 20, 19, 18)
)
knitr::opts_chunk$set(echo = TRUE)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
Age = c(18, 21, 20, 19, 18)
)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
Age = c(18, 21, 20, 19, 18)
)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
Age = c(18, 21, 20, 19, 18),
Major = c("Math", "Physics", "Biology", "Chemistry", "Math"),
FirstYear = c(2024, 2021, 2022, 2024)
)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
Age = c(18, 21, 20, 19, 18),
Major = c("Math", "Physics", "Biology", "Chemistry", "Math"),
FirstYear = c(2024, 2021, 2022, 2023, 2024)
)
row <- nrow(students)
ncol(students)
nrow(students)
ncol(students)
row <- nrow(students)
col <- ncol(students)
row <- nrow(students)
col <- ncol(students)
dim(students)
students[students$Major=="Math"]
students[students$Major=="Math",]
students[students$Age>22,]
students[students$Age>19,]
students[students$Age>19,]
students[students$Age>22,]
students[students$Age>22 & students$Major=="Math"]
students[students$Age>22 & students$Major=="Math"]
students[students$Age>22 & students$Major=="Math"]
students[students$Age>22 & students$Major=="Math",]
students[students$Major=="Math"]
students[students$Major=="Math",]
students[students$Age>22]
students[students$Age>22,]
students$GraduationYear <- students$FirstYear + 4
students$GraduationYear = c(students$FirstYear + 4)
students$GraduationYear = c(students$FirstYear + 4)
students[students$Age>22 & students$Major=="Math",]
students$GraduationYear = c(students$FirstYear + 4)
students$GraduationYear = c(students$FirstYear + 5)
students$GraduationYear <- students$FirstYear + 4
my_vec <- c(1,2,3,4,5)
my_vec <- vector(1,2,3,4)
my_vec <- c(1,2,3,4,5)
my_vec <- c(1,2,3,4,5)
my_vec <- 1:5
my_vec <- c(1,2,3,4,5)
my_vec2 <- 1:5
my_vec <- c(1,2,3,4,5)
my_vec2 <- students$Age
my_vec <- c(1,2,3,4,5)
my_vec2 <- students$Major
my_vec_2[1] <- 10
my_vec <- c(1,2,3,4,5)
my_vec_2 <- 1:5
my_vec_2[1] <- 10
knitr::opts_chunk$set(echo = TRUE)
students <- data.frame(
Name = c("Alice", "Bob", "Charlie", "David", "Eva"),
Age = c(18, 21, 20, 19, 18),
Major = c("Math", "Physics", "Biology", "Chemistry", "Math"),
FirstYear = c(2024, 2021, 2022, 2023, 2024)
)
row <- nrow(students)
col <- ncol(students)
dim(students)
students[students$Major=="Math",]
students[students$Age>22,]
students[students$Age>22 & students$Major=="Math",]
students$GraduationYear = c(students$FirstYear + 4)
my_vec <- c(1,2,3,4,5)
my_vec_3 <- 1:5
my_vec_2[1] <- 10
my_function <- function(x,y)
my_function <- function(x,y){
my_function(2,1)
}
my_function <- function(x,y){
result <- x + y
return(result)
}
my_function(2,1)
students$GraduationYear = c(students$FirstYear + 4)
# Load necessary packages
library(dplyr)
library(ggplot2) # Contains the diamonds dataset
data(diamonds)
data(diamonds)
head(diamonds)
data(diamonds)
head(diamonds)
glimpse(diamonds)
diamonsd_small <- select(carat, cut, color, price)
diamonsd_small <- diamonds %>% select(carat, cut, color, price)
diamonsd_small <- diamonds %>% select(carat, cut, color, price)
head(diamonds_small)
diamonds_small <- diamonds %>% select(carat, cut, color, price)
head(diamonds_small)
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" & color = "E")
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" & color == "E")
ideal_E_diamonds
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal", color == "E")
ideal_E_diamonds
#There are 3903 diamonds meet these criteria
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" && color == "E")
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" & color == "E")
ideal_E_diamonds
#There are 3903 diamonds meet these criteria
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal", color == "E")
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" & color == "E")
ideal_E_diamonds
#There are 3903 diamonds meet these criteria
ideal_E_diamonds1 <- diamonds %>% filter(cut == "Ideal", color == "E")
ideal_E_diamonds2 <- diamonds %>% filter(cut == "Ideal" & color == "E")
ideal_E_diamonds1
ideal_E_diamonds2
#There are 3903 diamonds meet these criteria
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" & color == "E")
ideal_E_diamonds
#There are 3903 diamonds meet these criteria
diamonds_small <- diamonds %>%
select(carat, cut, color, price)
head(diamonds_small)
arrange(diamonds, desc(price))
ideal_E_diamonds <- diamonds %>% filter("Ideal" %in% cut & "E" %in% color)
ideal_E_diamonds
#There are 3903 diamonds meet these criteria
ideal_E_diamonds <- diamonds %>% filter(cut == "Ideal" & color == "E")
ideal_E_diamonds
#There are 3903 diamonds meet these criteria
newDiamonds <- diamonds %>% mutate(price_per_carat = (price / carat))
head(newDiamonds)
newDiamonds <- diamonds %>% mutate(price_per_carat = (price / carat)) %>% select(price, carat, price_per_cart)
newDiamonds <- diamonds %>% mutate(price_per_carat = (price / carat)) %>% select(price, carat, price_per_carat)
head(newDiamonds)
group_by(cut) %>% summarize(ave_price_for_each_cut = mean(price))
diamonds %>% group_by(cut) %>% summarize(ave_price_for_each_cut = mean(price))
diamonds %>%
group_by(cut) %>%
summarize(ave_price_for_each_cut = mean(price))
diamonds %>%
group_by(cut) %>%
summarize(ave_price_for_each_cut = mean(price))
group_by(diamonds, cut)
diamonds %>%
group_by(cut) %>%
summarize(ave_price_for_each_cut = mean(price))
yes <- group_by(diamonds, cut)
yes
diamonds %>%
group_by(cut) %>%
summarize(ave_price_for_each_cut = mean(price))
group_by(cut)
diamonds %>%
group_by(cut) %>%
summarize(ave_price_for_each_cut = mean(price))
group_by(diamonds, cut)
